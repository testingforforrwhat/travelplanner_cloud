plugins {
    id 'java'
    //    Spring Cloud Releases and Compatibility - https://spring.io/projects/spring-cloud/#overview
    //    Gradle Dependency Management Plugin 文档 - https://github.com/spring-gradle-plugins/dependency-management-plugin
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// tencentcloud
//
// repositories {
//     mavenCentral({ url 'https://maven.aliyun.com/repository/central' })
// }
//
// #16 [builder 9/9] RUN ./gradlew clean build -x test
// #16 0.586 Downloading https://services.gradle.org/distributions/gradle-8.10.2-bin.zip
// #16 2.859
// #16 2.859 Exception in thread "main" java.net.SocketException: Connection reset
repositories {
    maven {
        url 'https://mirrors.cloud.tencent.com/nexus/repository/maven-public/'
    }
    // 备用源，可选
    maven {
        url 'https://maven.aliyun.com/repository/central'
    }
    mavenCentral() // 最后兜底
}

// 重要：Spring Cloud 版本管理
ext {
    set('springCloudVersion', "2022.0.4")
    set('springCloudAlibabaVersion', "2022.0.0.0")
}

// Spring Cloud 推荐通过 BOM（Bill of Materials）统一管理依赖版本。如果你只写了 starter 名，没有 BOM，也找不到可解析的版本。
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.5"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'org.springframework.boot:spring-boot-starter'
    // Nacos 服务发现
    // 服务发现自动化: Nacos 实现服务自动注册与发现
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    // Nacos 配置中心
    // 配置中心: Nacos 提供配置集中管理与动态推送
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway' // Gateway必备


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
